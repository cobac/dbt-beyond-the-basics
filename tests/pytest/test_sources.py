import re

import pytest


@pytest.mark.sources_json
def test_source_freshness_sql_is_valid(sources_json: dict) -> None:
    """
    "dbt source freshness" is allowed to fail in CICD due to stale data. This test checks that the generated SQL is valid.

    This test needs to run after sources.json is built (i.e. `dbt source freshness`).
    """

    for source in sources_json["results"]:
        assert (
            source["status"] != "runtime error"
        ), f"The SQL generated by the source freshness check on {source['unique_id']} is invalid."


@pytest.mark.sources_json
def test_source_names(sources_json: dict) -> None:
    """
    Source names should only contain lowercase, underscore and integer characters.

    This test needs to run after sources.json is built (i.e. `dbt source freshness`).
    """

    regex_pattern = "[a-z_.0-9]*"

    for source in sources_json["results"]:
        source_unique_id = source["unique_id"]
        assert (
            source_unique_id == re.compile(regex_pattern).match(source_unique_id)[0]
        ), f"'{source_unique_id}'does not align with the existing naming convention ({regex_pattern})."
